{"version":3,"file":"static/js/9253.d5ff25c7.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/plugin-absorbers/browser/Absorbers.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"@tsparticles/engine\";\nconst defaultIndex = 0;\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName ?? defaultIndex]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = async (options, position) => this.addAbsorber(options, position);\n    }\n    async addAbsorber(options, position) {\n        const { AbsorberInstance } = await import(\"./AbsorberInstance.js\"), absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            void this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        const promises = executeOnSingleOrMultiple(this.absorbers, async (absorber) => {\n            await this.addAbsorber(absorber);\n        });\n        if (promises instanceof Array) {\n            await Promise.all(promises);\n        }\n        else {\n            await promises;\n        }\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber), deleteCount = 1;\n        if (index >= defaultIndex) {\n            this.array.splice(index, deleteCount);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n"],"names":["Absorbers","container","_this","_classCallCheck","this","array","absorbers","interactivityAbsorbers","getAbsorber","idxOrName","undefined","isNumber","find","t","name","addAbsorber","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","position","wrap","_context","prev","next","abrupt","stop","_x","_x2","apply","arguments","_createClass","key","value","_addAbsorber","_callee2","_yield$import","AbsorberInstance","absorber","_context2","sent","push","_x3","_x4","context","_step","_iterator","_createForOfIteratorHelper","s","n","done","draw","err","e","f","mode","absorberOptions","modeAbsorbers","absorbersModeOptions","itemFromSingleOrMultiple","absorbersOptions","aPosition","interactivity","mouse","clickPosition","_init","_callee4","promises","_this2","_context4","actualOptions","modes","executeOnSingleOrMultiple","_ref2","_callee3","_context3","_x5","Array","Promise","all","particle","_step2","_iterator2","attract","destroyed","index","indexOf","splice","_step3","_iterator3","resize"],"sourceRoot":""}